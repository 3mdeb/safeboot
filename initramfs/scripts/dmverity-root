#!/bin/sh
# goes in /etc/initramfs-tools/scripts/local-premount/dmverity-root
# This allows the dmverity root hash to be passed in on the command line.

PREFIX="dmverity-root"

case $1 in
    prereqs)
        exit 0
        ;;
esac

. /scripts/functions

# Find our root hash and salt

HASH=""
SALT=""
HASHDEV=""
ROOTDEV=""
for arg in $(cat /proc/cmdline)
do
    case "$arg" in
        verity.hash=*)
            HASH=${arg#verity.hash=}
            ;;
        verity.salt=*)
            SALT=${arg#verity.salt=}
            ;;
	verity.rootdev=*)
            ROOTDEV=${arg#verity.rootdev=}
            ;;
	verity.hashdev=*)
            HASHDEV=${arg#verity.hashdev=}
            ;;
        *)
            ;;
    esac
done

if [ "$HASH" == "" -o "$ROOTDEV" == "" -o "$HASHDEV" == "" ]
then
    log_warning_msg "$PREFIX: verity command line parameters not found; not enabling"
    exit 0
fi

log_begin_msg "$PREFIX: verity.hash=$HASH verity.rootdev=$ROOTDEV verity.hashdev=$HASHDEV"

if ! modprobe -qb dm_verity
then
    log_failure_msg "$PREFIX: unable to load dm_verity module"
    exit 0
fi

# initially we have:

#  /           initramfs
#  ${rootmnt}  readonly-mounted real root FS  (mounted from device ${ROOT})
#
# We want:
#
#  /              initramfs
#  vroot          LVM volume from device ${ROOT}, with hashes from /hashes
#  ${rootmnt}     re-mounted root, now going through the vroot
#

#umount ${rootmnt}

veritysetup open "${ROOTDEV}" vroot "${HASHDEV}" "${HASH}"

if [ $? -ne 0 ]; then
	log_failure_msg "$PREFIX: ${ROOTDEV} unable to setup verity, remounting ${rootmnt}"
	panic "$PREFIX: failed"
	#umount /hashes
	#mount -o ro ${ROOT} ${rootmnt}
	exit 0
fi

# Verity protected volume group is setup - mount it as root
mount -o ro,noload /dev/mapper/vroot ${rootmnt}
if [ $? -ne 0 ]; then
	log_failure_msg "$PREFIX: ${ROOT} unable to mount verity dm, remounting"
	veritysetup close vroot
	#mount -o ro,noload ${ROOT} ${rootmnt}
	panic "$PREFIX: failed"
	exit 0
fi

log_success_msg "$PREFIX: verified ${rootmnt} with root hash $HASH"

# now unmount it so that it can be remounted later
umount "${rootmnt}"

# also set the read-only flag on the hashes so that they are not tampered
# with accidentally while dmverity is running
blockdev --setro "${HASHDEV}"

exit 0
